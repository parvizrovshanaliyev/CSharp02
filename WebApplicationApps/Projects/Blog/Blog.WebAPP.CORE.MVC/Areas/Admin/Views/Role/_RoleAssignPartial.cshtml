@model Blog.Entities.Dtos.Role.UserRoleAssignDto
@{
    var roleGroups = Model.Roles
        .Select(i => i.Name.Split('_').First())
        .Distinct()
        .ToList();
}
<form id="form" asp-action="Assign" onsubmit="return jQueryAjaxPost(this);">
    <input type="hidden" name="IsValid" value="@ViewData.ModelState.IsValid.ToString()"/>
    <div asp-validation-summary="All" id="validationSummary" class="text-danger" aria-hidden="true" style="display:none;"></div>
    <input type="hidden" asp-for="UserId"/>
    <div class="form-row">
        @foreach (var roleGroup in roleGroups)
        {
            <div class="form-group col-md-12"><h5>@roleGroup</h5></div>

            for (int i = 0; i < Model.Roles.Count; i++)
            {
                @if (Model.Roles[i].Name.Split('_').First() == roleGroup)
                {
                    <div class="form-group col-md-3">
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" asp-for="@Model.Roles[i].IsAssigned">
                            <label class="form-check-label" asp-for="@Model.Roles[i].Id">@Model.Roles[i].Name.Split('_').Last()</label>
                            <input type="hidden" asp-for="@Model.Roles[i].Id"/>
                            <input type="hidden" asp-for="@Model.Roles[i].Name"/>
                        </div>
                    </div>
                }
            }

        }
    </div>
    <div class="form-group">
        <div class="col-md-6 offset-md-3">
            <input type="submit" value="Submit" class="btn btn-primary btn-block"/>
        </div>
    </div>
</form>


